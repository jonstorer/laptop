#!/bin/sh

# Welcome to the laptop script!
# Be prepared to turn your laptop (or desktop, no haters here)
# into an awesome development machine.

# Ask for sudo upfront so we don't have to get it later
sudo -v

# Keep using sudo so the permissions don't time out
while true; do sudo -n true; sleep 10; kill -0 "$$" || exit; done 2>/dev/null &

# Catch, print, exit
# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "Something Went Wrong\n\n$LINENO\n\n$(caller)" >&2; exit $ret' EXIT

# fail fast
set -e

fancy_echo() {
  local fmt="$1"; shift
  # shellcheck disable=SC2059
  echo $fmt
  [[ ! -z "$@" ]] && echo "$@"
}

#if [[ "$(uname -m)" == "x86_64" ]]; then
  #HOMEBREW_PREFIX="/usr/local"
#else
  #HOMEBREW_PREFIX="/opt/homebrew"

  #git config --global core.compression 0
  #git config --global http.postBuffer 1048576000

  ## Check if Rosetta is installed
  #checkRosettaStatus=$(/bin/launchctl list | /usr/bin/grep "com.apple.oahd-root-helper")
  #if [[ -e "/Library/Apple/usr/share/rosetta" && "${checkRosettaStatus}" != "" ]]; then
    #fancy_echo "Rosetta Folder exists and Rosetta Service is running."
  #else
    #fancy_echo "Rosetta Folder does not exist or Rosetta service is not running." "Installing Rosetta ..."
    #sudo softwareupdate --install-rosetta --agree-to-license
  #fi
#fi

#fancy_echo "Ensure Homebrew Directories exist with permissions"
#sudo mkdir -p "$HOMEBREW_PREFIX"
#sudo chflags norestricted "$HOMEBREW_PREFIX"
#sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"

#if ! command -v brew > /dev/null 2>&1; then
  #fancy_echo "Installing Homebrew"
  #NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL 'https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh')"

  #eval "$($HOMEBREW_PREFIX/bin/brew shellenv)"
#fi

#fancy_echo "brew update ..."
#brew update --force

#FORMULAE=(
  #ctags
  #gnupg2
  #openssl
  #reattach-to-user-namespace
  #gcc
  #gnu-sed
  #git
  #hub
  #htop
  #watch
  #the_silver_searcher
  #tmux
  #vim
  #zsh
  #tmate
  #grep
  #rename
  #jq
  #forego
  #nodenv
  #node-build
  #rbenv
  #ruby-build
#)

#fancy_echo "brew install" "${FORMULAE[@]}"
#brew install "${FORMULAE[@]}"

#fancy_echo "brew tap cask-version"
#brew tap "homebrew/cask-versions"

#CASKS=(
  #dotnet-sdk
  #visual-studio
  #visual-studio-code
  #microsoft-teams
  #microsoft-remote-desktop
  #alfred
  #docker
  #vagrant
  #google-chrome
  #iterm2
  #licecap
  #postman
  #rectangle
  #slack
  #spotify
  #macdown
  #textmate
  #utm
  #karabiner-elements
  #ngrok
#)

#fancy_echo "brew install --cask" "${CASKS[@]}"
#brew install --cask "${CASKS[@]}"

#fancy_echo "brew cleanup"
#brew cleanup

#zshShellPath="$HOMEBREW_PREFIX/bin/zsh"

#[ ! -f $zshShellPath ] && fancy_echo "zsh is not installed" && exit 1;

#if [[ "$(command -v zsh)" != "$HOMEBREW_PREFIX/bin/zsh" ]]; then
  #if ! grep "$zshShellPath" /etc/shells > /dev/null 2>&1 ; then
    #fancy_echo "Adding '$zshShellPath' to /etc/shells"
    #sudo sh -c "echo $zshShellPath >> /etc/shells"
  #fi

  #fancy_echo "Changing your shell to zsh ..."
  #sudo chsh -s "$zshShellPath" "$USER"
#fi

## Install oh-my-zsh

#fancy_echo "Installing oh-my-zsh"
#sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
#fancy_echo "Need to logout now to start the new SHELL"
#logout

#dotFilesPath="$HOME/.dotfiles";

#if [ ! -d $dotFilesPath ]; then
  #git clone git@github.com:jonstorer/dotfiles.git $dotFilesPath;
#fi

#cd $dotFilesPath && git pull && git checkout js-dotfiles-only && sh install.sh && cd -

#fancy_echo "Configuring Mac & Applications"

#osascript -e 'tell application "System Preferences" to quit'

#sudo softwareupdate --schedule OFF # Turn SoftwareUpdate off to avoid conflicts

################################################################################
## General UI/UX                                                               #
################################################################################

#defaults write -g AppleICUForce24HourTime -bool true                                  # Set Time fromat to 24-Hour Time
#defaults write com.apple.systempreferences NSQuitAlwaysKeepsWindows -bool false       # Disable Resume system-wide
#defaults write NSGlobalDomain NSQuitAlwaysKeepsWindows -bool false                    # Disable Resume system-wide
#defaults write NSGlobalDomain NSWindowResizeTime -float 0.001                         # Increase window resize speed for Cocoa applications
#defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true           # Expand save panel by default
#defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true              # Expand print panel by default
#defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool false           # Save to disk (not to iCloud) by default
#defaults write NSGlobalDomain NSTextShowsControlCharacters -bool true                 # Display ASCII control characters using caret notation in standard text views
#defaults write NSGlobalDomain NSDisableAutomaticTermination -bool true                # Disable automatic termination of inactive apps
#sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName # Reveal IP address, hostname, OS version, etc. when clicking the clock in the login window
#defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true          # Automatically quit printer app once the print jobs complete
#systemsetup -setrestartfreeze on                                                      # Restart automatically if the computer freezes
#defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1                      # Check for software updates daily, not just once per week

################################################################################
## Trackpad, mouse, keyboard, Bluetooth accessories, and input                 #
################################################################################

#defaults write NSGlobalDomain AppleEnableSwipeNavigateWithScrolls -bool true                                  # Trackpad: swipe between pages with three fingers
#defaults -currentHost write NSGlobalDomain com.apple.trackpad.threeFingerHorizSwipeGesture -int 1
#defaults write com.apple.driver.AppleBluetoothMultitouch.trackpad TrackpadThreeFingerHorizSwipeGesture -int 1
#defaults write com.apple.BluetoothAudioAgent "Apple Bitpool Min (editable)" -int 40                           # Increase sound quality for Bluetooth headphones/headsets
#defaults write NSGlobalDomain AppleKeyboardUIMode -int 3                                                      # Enable full keyboard access for all controls (e.g. enable Tab in modal dialogs)
#defaults write com.apple.universalaccess closeViewScrollWheelToggle -bool true                                # Use scroll gesture with the Ctrl (^) modifier key to zoom
#defaults write com.apple.universalaccess HIDScrollZoomModifierMask -int 262144
#defaults write com.apple.universalaccess closeViewZoomFollowsFocus -bool true                                 # Follow the keyboard focus while zoomed in
#defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false                                            # Disable press-and-hold for keys in favor of key repeat
#defaults write NSGlobalDomain KeyRepeat -int 0                                                                # Set a blazingly fast keyboard repeat rate
#defaults write NSGlobalDomain InitialKeyRepeat -int 10                                                        # Set a blazingly fast first key repeate delay
#defaults write com.apple.BezelServices kDim -bool true                                                        # Automatically illuminate built-in MacBook keyboard in low light
#defaults write com.apple.BezelServices kDimTime -int 300                                                      # Turn off keyboard illumination when computer is not used for 5 minutes
#defaults write NSGlobalDomain AppleLanguages -array "en"                                                      # Set language and text formats
#defaults write NSGlobalDomain AppleLocale -string "en_US@currency=USD"                                        # Use "en_US"/"USD" not "en_GB"/"EUR"
#defaults write NSGlobalDomain AppleMeasurementUnits -string "Inches"                                          # Use "Inches" not "Centimeters"
#defaults write NSGlobalDomain AppleMetricUnits -bool false                                                    # Do not use Metric
#systemsetup -settimezone "America/Indiana/Indianapolis" > /dev/null                                           # Set the timezone; see `systemsetup -listtimezones` for other values
#defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false                                # Disable auto-correct

################################################################################
## Screen                                                                      #
################################################################################

#defaults write com.apple.screensaver askForPassword -int 1                                          # Require password from sleep or screen saver
#defaults write com.apple.screensaver askForPasswordDelay -int 0                                     # No delay to required password
#defaults write com.apple.screencapture location -string "$HOME/Desktop"                             # Save screenshots to the desktop
#defaults write com.apple.screencapture type -string "png"                                           # Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
#defaults write com.apple.screencapture disable-shadow -bool true                                    # Disable shadow in screenshots
#defaults write NSGlobalDomain AppleFontSmoothing -int 2                                             # Enable subpixel font rendering on non-Apple LCDs
#sudo defaults write /Library/Preferences/com.apple.windowserver DisplayResolutionEnabled -bool true # Enable HiDPI display modes (requires restart)

################################################################################
## Finder                                                                      #
################################################################################

#defaults write com.apple.finder NewWindowTarget -string "PfHm"               # New windows open in home directory
#defaults write com.apple.finder _FXSortFoldersFirst -bool true               # Keep folders on top when sorting by name
#defaults write com.apple.finder DisableAllAnimations -bool true              # Disable window animations and Get Info animations
#defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true   # Show icons for hard drives, servers, and removable media on the desktop
#defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true           # Show icons for hard drives, servers, and removable media on the desktop
#defaults write com.apple.finder ShowMountedServersOnDesktop -bool true       # Show icons for hard drives, servers, and removable media on the desktop
#defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true       # Show icons for hard drives, servers, and removable media on the desktop
#defaults write com.apple.finder AppleShowAllFiles -bool false                # Do not show hidden files
#defaults write com.apple.finder ShowStatusBar -bool true                     # Show status bar
#defaults write com.apple.finder ShowPathBar -bool true                       # Show path bar
#defaults write com.apple.finder QLEnableTextSelection -bool true             # Allow text selection in Quick Look
#Defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"          # When performing a search, search the current folder by default
#defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false   # Disable the warning when changing a file extension
#defaults write NSGlobalDomain com.apple.springing.enabled -bool true         # Enable spring loading for directories
#defaults write NSGlobalDomain com.apple.springing.delay -float 0             # Remove the spring loading delay for directories
#defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true # Avoid creating .DS_Store files on network volumes
#defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true  # Automatically open a new Finder window when a volume is mounted
#defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true  # Automatically open a new Finder window when a volume is mounted
#defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true     # Automatically open a new Finder window when removablem media is inserted
#defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"          # Use list view in all Finder windows by default # Four-letter codes for the other view modes: `icnv`, `clmv`, `Flwv`
#defaults write com.apple.finder WarnOnEmptyTrash -bool false                 # Disable the warning before emptying the Trash
#defaults write com.apple.NetworkBrowser BrowseAllInterfaces -bool true       # Enable AirDrop over Ethernet and on unsupported Macs running Lion
#chflags nohidden ~/Library                                                   # Show the ~/Library folder

################################################################################
## Dock, Dashboard, and hot corners                                            #
################################################################################

#defaults write com.apple.dock mru-spaces -bool false                             # Do not Automatically rearrange Spaces based on most recent use
#defaults write com.apple.dock expose-animation-duration -float 0.1               # Speed up Mission Control animations
#defaults write com.apple.dock orientation left                                   # Dock lives on the left
#defaults write com.apple.dock autohide-delay -float 0                            # Remove the auto-hiding Dock delay
#defaults write com.apple.dock autohide-time-modifier -float 0                    # Remove the animation when hiding/showing the Dock
#defaults write com.apple.dock autohide -bool true                                # Automatically hide and show the Dock
#defaults write com.apple.dock showhidden -bool true                              # Make Dock icons of hidden applications translucent
#defaults write com.apple.dock launchanim -bool false                             # Don’t animate opening applications from the Dock
#defaults write com.apple.dock show-recents -bool false                           # Do not show recent applications in Dock
#defaults write com.apple.dock static-only -bool true                             # Show only open applications in the Dock
#defaults write com.apple.dock enable-spring-load-actions-on-all-items -bool true # Enable spring loading for all Dock items
#defaults write com.apple.dock show-process-indicators -bool true                 # Show indicator lights for open applications in the Dock
#defaults write com.apple.dock dashboard-in-overlay -bool true                    # Do not show Dashboard as a Space
#defaults write com.apple.dashboard mcx-disabled -bool true                       # Disable Dashboard

#find ~/Library/Application\ Support/Dock -name "*.db" -maxdepth 1 -delete # Reset Launchpad

## Hot corners
## Possible values:
##  0: no-op
##  2: Mission Control
##  3: Show application windows
##  4: Desktop
##  5: Start screen saver
##  6: Disable screen saver
##  7: Dashboard
## 10: Put display to sleep
## 11: Launchpad
## 12: Notification Center
## 13: Lock Screen

#defaults write com.apple.dock wvous-tl-corner -int 2   # Top left screen corner → Mission Control
#defaults write com.apple.dock wvous-tl-modifier -int 0
#defaults write com.apple.dock wvous-br-corner -int 2   # Bottom left screen corner → Mission Control
#defaults write com.apple.dock wvous-br-modifier -int 0
#defaults write com.apple.dock wvous-tr-corner -int 4   # Top right screen corner → Desktop
#defaults write com.apple.dock wvous-tr-modifier -int 0
#defaults write com.apple.dock wvous-bl-corner -int 4   # Bottom left screen corner → Desktop
#defaults write com.apple.dock wvous-bl-modifier -int 0

################################################################################
## Safari & WebKit                                                             #
################################################################################

#defaults write com.apple.Safari HomePage -string "about:blank"                                                              # Set Safari’s home page to `about:blank` for faster loading
#defaults write com.apple.Safari ShowFullURLInSmartSearchField -bool true                                                    # Show the full URL in the address bar (note: this still hides the scheme)
#defaults write com.apple.Safari ShowFavoritesBar -bool false                                                                # Hide Safari’s bookmarks bar by default
#defaults write com.apple.Safari FindOnPageMatchesWordStartsOnly -bool false                                                 # Make Safari’s search banners default to Contains instead of Starts With
#defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2BackspaceKeyNavigationEnabled -bool true # Allow hitting the Backspace key to go to the previous page in history
#defaults write com.apple.Safari AutoOpenSafeDownloads -bool false                                                           # Prevent Safari from opening ‘safe’ files automatically after downloading
#defaults write com.apple.Safari WarnAboutFraudulentWebsites -bool true                                                      # Warn about fraudulent websites
#defaults write com.apple.Safari SendDoNotTrackHTTPHeader -bool true                                                         # Enable “Do Not Track”
#defaults write com.apple.Safari DebugSnapshotsUpdatePolicy -int 2                                                           # Disable Safari’s thumbnail cache for History and Top Sites
#defaults write com.apple.Safari IncludeInternalDebugMenu -bool true                                                         # Enable Safari’s debug menu
#defaults write com.apple.Safari ProxiesInBookmarksBar "()"                                                                  # Remove useless icons from Safari’s bookmarks bar
#defaults write com.apple.Safari IncludeDevelopMenu -bool true                                                               # Enable the Develop menu and the Web Inspector in Safari
#defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
#defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true
#defaults write NSGlobalDomain WebKitDeveloperExtras -bool true                                                              # Add a context menu item for showing the Web Inspector in web views


################################################################################
## Terminal                                                                    #
################################################################################

#defaults write com.apple.terminal StringEncodings -array 4 # Only use UTF-8 in Terminal.app

################################################################################
## iTerm2                                                                      #
################################################################################

#defaults write com.google.iterm2 CheckTestRelease -bool true
#defaults write com.google.iterm2 DimBackgroundWindows -bool false
#defaults write com.google.iterm2 DimInactiveSplitPanes -bool false
#defaults write com.google.iterm2 DisableFullscreenTransparency -bool false
#defaults write com.google.iterm2 HideActivityIndicator -bool false
#defaults write com.google.iterm2 HideScrollbar -bool true
#defaults write com.google.iterm2 HideTab -bool false
#defaults write com.google.iterm2 HighlightTabLabels -bool true
#defaults write com.google.iterm2 OpenArrangementAtStartup -bool false
#defaults write com.google.iterm2 PromptOnQuit -bool true
#defaults write com.google.iterm2 QuitWhenAllWindowsClosed -bool true
#defaults write com.google.iterm2 ShowFullScreenTabBar -bool true
#defaults write com.google.iterm2 UseBorder -bool false
#defaults write com.google.iterm2 UseLionStyleFullscreen -bool false
#defaults write com.google.iterm2 WindowStyle -int 0

##"Flashing Bell"

################################################################################
## Time Machine                                                                #
################################################################################

#defaults write com.apple.TimeMachine DoNotOfferNewDisksForBackup -bool true # Prevent Time Machine from prompting to use new hard drives as backup volume
#hash tmutil &> /dev/null && sudo tmutil disable                             # Disable local Time Machine backups

################################################################################
## Dashboard, TextEdit, and Disk Utility                                       #
################################################################################

#defaults write com.apple.dashboard devmode -bool true                  # Enable Dashboard dev mode (allows keeping widgets on the desktop)
#defaults write com.apple.TextEdit RichText -int 0                      # Use plain text mode for new TextEdit documents
#defaults write com.apple.TextEdit PlainTextEncoding -int 4             # Open and save files as UTF-8 in TextEdit
#defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 4
#defaults write com.apple.DiskUtility DUDebugMenuEnabled -bool true     # Enable the debug menu in Disk Utility
#defaults write com.apple.DiskUtility advanced-image-options -bool true

################################################################################
## Google Chrome & Google Chrome Canary                                        #
################################################################################

#defaults write com.google.Chrome ExtensionInstallSources -array "https://*.github.com/*" "http://userscripts.org/*" # Allow installing user scripts via GitHub or Userscripts.org

################################################################################
## Rectangle.app                                                               #
################################################################################

#defaults write com.knollsoft.Rectangle alternateDefaultShortcuts -bool false

################################################################################
## Mac App Store                                                               #
#################################################################################

#defaults write com.apple.appstore WebKitDeveloperExtras -bool true       # Enable the WebKit Developer Tools in the Mac App Store
#defaults write com.apple.appstore ShowDebugMenu -bool true               # Enable Debug Menu in the Mac App Store
#defaults write com.apple.SoftwareUpdate AutomaticCheckEnabled -bool true # Enable the automatic update check
#defaults write com.apple.SoftwareUpdate ScheduleFrequency -int 1         # Check for software updates daily, not just once per week
#defaults write com.apple.SoftwareUpdate AutomaticDownload -int 1         # Download newly available updates in background
#defaults write com.apple.SoftwareUpdate CriticalUpdateInstall -int 1     # Install System data files & security updates
#defaults write com.apple.SoftwareUpdate ConfigDataInstall -int 1         # Automatically download apps purchased on other Macs
#defaults write com.apple.commerce AutoUpdate -bool true                  # Turn on app auto-update
#defaults write com.apple.commerce AutoUpdateRestartRequired -bool true   # Allow the App Store to reboot machine on macOS updates

################################################################################
## Photos                                                                      #
################################################################################

#defaults -currentHost write com.apple.ImageCapture disableHotPlug -bool true # Prevent Photos from opening automatically when devices are plugged in

################################################################################
## Google Chrome & Google Chrome Canary                                        #
################################################################################

#defaults write com.google.Chrome AppleEnableSwipeNavigateWithScrolls -bool false             # Disable the all too sensitive backswipe on trackpads
#defaults write com.google.Chrome.canary AppleEnableSwipeNavigateWithScrolls -bool false
#defaults write com.google.Chrome AppleEnableMouseSwipeNavigateWithScrolls -bool false        # Disable the all too sensitive backswipe on Magic Mouse
#defaults write com.google.Chrome.canary AppleEnableMouseSwipeNavigateWithScrolls -bool false
#defaults write com.google.Chrome DisablePrintPreview -bool true                              # Use the system-native print preview dialog
#defaults write com.google.Chrome.canary DisablePrintPreview -bool true
#defaults write com.google.Chrome PMPrintingExpandedStateForPrint2 -bool true                 # Expand the print dialog by default
#defaults write com.google.Chrome.canary PMPrintingExpandedStateForPrint2 -bool true

################################################################################
## Create the locate database                                                  #
################################################################################

#sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.locate.plist

#sudo softwareupdate --schedule ON # Turn SoftwareUpdate back on

################################################################################
## Kill affected applications                                                  #
################################################################################

#for app in "Calendar" "Contacts" "Dashboard" "Dock" "Finder" "Mail" "Safari" "SystemUIServer"; do
  #killall "$app" > /dev/null 2>&1
#done

#echo "Done. Note that some of these changes require a logout/restart to take effect."
