#!/bin/sh

# Welcome to the laptop script!
# Be prepared to turn your laptop (or desktop, no haters here)
# into an awesome development machine.

gem_install_or_update() {
  if gem list "$1" --installed > /dev/null; then
    gem update "$@"
  else
    gem install "$@"
    rbenv rehash
  fi
}

fancy_echo() {
  local msg="$1"; shift

  # shellcheck disable=SC2059
  printf "\n**\n" "$@"
  printf "** $msg" "$@"
  printf "\n**\n\n" "$@"
}

append_to_zshrc() {
  local text="$1" zshrc
  local skip_new_line="${2:-0}"

  if [ -w "$HOME/.zshrc.local" ]; then
    zshrc="$HOME/.zshrc.local"
  else
    zshrc="$HOME/.zshrc"
  fi

  if ! grep -Fqs "$text" "$zshrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\n" "$text" >> "$zshrc"
    else
      printf "\n%s\n" "$text" >> "$zshrc"
    fi
  fi
}

upsert_teamviewer_repository() {
  local key_list=$(apt-key list);
  if ! grep -q "TeamViewer" $key_list; then
    fancy_echo "Add Teamviewer Key"
    curl -fsSL https://download.teamviewer.com/download/linux/signature/TeamViewer2017.asc | sudo apt-key add -
  fi

  if ! grep -q "teamviewer.com" /etc/apt/sources.list > /dev/null 2>&1 ; then
    fancy_echo "Add Teamviewer Repository"
    sudo add-apt-repository 'deb http://linux.teamviewer.com/deb stable main'
  fi
}

apt_install() {
  local package="$1";

  fancy_echo "Installing $package"
  sudo apt install -y $package
}

snap_install() {
  local package="$1";
  #local flags="$2";

  fancy_echo "Installing $package"
  sudo snap install $package
  #$flags
}

c_snap_install() {
  local package="$1";

  fancy_echo "Installing $package"
  sudo snap install $package --classic
}

# shellcheck disable=SC2154
#trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

#set -e

upsert_teamviewer_repository

fancy_echo "Update Apt Cache"
sudo apt update

fancy_echo "Distro Upgrade"
sudo apt dist-upgrade

apt_install build-essential
apt_install zsh
apt_install exuberant-ctags
apt_install gcc
apt_install git
apt_install htop
apt_install hub
apt_install imagemagick
apt_install openssl
apt_install libssl-dev
apt_install zlib1g-dev
apt_install silversearcher-ag
apt_install tmate
apt_install tmux
apt_install vim
apt_install xclip
apt_install teamviewer
sudo teamviewer daemon enable

c_snap_install slack
c_snap_install code
snap_install spotify
snap_install chromium
snap_install docker

if [ ! -d "$HOME/.bin/" ]; then mkdir "$HOME/.bin"; fi
if [ ! -f "$HOME/.zshrc" ]; then touch "$HOME/.zshrc"; fi

# shellcheck disable=SC2016
append_to_zshrc 'export PATH="$HOME/.bin:$PATH"'

shell_path="$(command -v zsh)"
fancy_echo "Changing your shell to zsh at '$shell_path' ..."
if ! grep "$shell_path" /etc/shells > /dev/null 2>&1 ; then
  fancy_echo "Adding '$shell_path' to /etc/shells"
  sudo sh -c "echo $shell_path >> /etc/shells"
fi
sudo chsh -s "$shell_path" $USER

fancy_echo "Installing rbenv"
append_to_zshrc 'export PATH="$HOME/.rbenv/bin:$PATH"'
append_to_zshrc 'eval "$(rbenv init - --no-rehash)"' 1
PATH="$HOME/.rbenv/bin:$HOME/.rbenv/shims:$PATH"
curl -fsSL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer | bash
eval "$(rbenv init -)"

fancy_echo "Install nodenv"
append_to_zshrc 'export PATH="$HOME/.nodenv/bin:$PATH"'
append_to_zshrc 'eval "$(nodenv init -)"' 1
PATH="$HOME/.nodenv/bin:$HOME/.nodenv/shims:$PATH"
curl -fsSL https://raw.githubusercontent.com/nodenv/nodenv-installer/master/bin/nodenv-installer | bash
eval "$(nodenv init -)"

fancy_echo "Configuring Ruby ..."
ruby_version=$(rbenv install -l | grep -v - | tail -1 | sed -e 's/^ *//')
# shellcheck disable=SC2016

if ! rbenv versions | grep -Fq "$ruby_version"; then rbenv install -s "$ruby_version"; fi

rbenv global "$ruby_version"
rbenv shell "$ruby_version"
gem update --system
gem_install_or_update 'bundler'
number_of_cores=$(nproc);
bundle config --global jobs $((number_of_cores - 1))
