#!/bin/sh

# Welcome to the machine script!

# Ask for sudo upfront so we don't have to get it later
sudo -v

# Keep using sudo so the permissions don't time out by updating existing sudo time stamp if set, otherwise do nothing.
while true; do sudo -n true; sleep 10; kill -0 "$$" || exit; done 2>/dev/null &

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT
set -e

sudo apt update
sudo apt full-upgrade

sudo apt-get install -y ca-certificates curl gnupg

if [ ! -e "/etc/apt/keyrigns/docker.gpg" ]; then
  sudo install -m 0755 -d /etc/apt/keyrings
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  sudo chmod a+r /etc/apt/keyrings/docker.gpg

# shellcheck disable=SC1091
  echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
fi

sudo apt full-upgrade

sudo apt install -y <<EOF
build-essential
gcc
zsh
exuberant-ctags
git
htop
hub
openssl
openssh-server
silversearcher-ag
tmate
tmux
vim

docker-ce
docker-ce-cli
containerd.io
docker-buildx-plugin
docker-compose-plugin
EOF

#sudo systemctl enable ssh
#sudo systemctl start ssh

#sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT
#sudo iptables -A OUTPUT -p tcp --dport 22 -j ACCEPT
#sudo iptables-save

shell_path="$(command -v zsh)"
echo "Ensure shell is zsh at '$shell_path' ..."
if ! grep "$shell_path" /etc/shells > /dev/null 2>&1 ; then
  echo "Add '$shell_path' to /etc/shells"
  sudo sh -c "echo $shell_path >> /etc/shells"
fi
sudo chsh -s "$shell_path" "$USER"
